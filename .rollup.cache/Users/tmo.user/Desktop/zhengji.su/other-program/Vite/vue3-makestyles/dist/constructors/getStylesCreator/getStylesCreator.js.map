{"version":3,"file":"getStylesCreator.js","sourceRoot":"","sources":["../../../src/constructors/getStylesCreator/getStylesCreator.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAChF,OAAO,SAAS,MAAM,8BAA8B,CAAC;AACrD,OAAO,UAAU,MAAM,4BAA4B,CAAC;AAIpD,MAAM,CAAC,OAAO,UAAU,gBAAgB,CAAC,eAA+B;IACtE,IAAM,cAAc,GAAG,UAAU,CAAC,eAAe,CAAC,CAAA;IAElD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;QACzC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,EAAE;YACjD,OAAO,CAAC,KAAK,CACX;gBACE,yDAAyD;gBACzD,0EAA0E;aAC3E,CAAC,IAAI,CAAC,IAAI,CAAC,CACb,CAAC;SACH;KACF;IAED,OAAO;QACL,MAAM,EAAE,UAAC,KAAY,EAAE,KAAa,EAAE,IAAY;;YAChD,IAAI,MAAM,CAAC;YACX,IAAI;gBACF,MAAM,GAAG,cAAc,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;aAC3E;YAAC,OAAO,GAAG,EAAE;gBACZ,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;oBACzC,IAAI,cAAc,IAAI,KAAK,KAAK,UAAU,EAAE;wBAC1C,OAAO,CAAC,KAAK,CACX;4BACE,yDAAyD;4BACzD,uDAAuD;4BACvD,+FAA+F;yBAChG,CAAC,IAAI,CAAC,IAAI,CAAC,CACb,CAAC;qBACH;iBACF;gBACD,MAAM,GAAG,CAAC;aACX;YAED,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,MAAM,CAAA;aACd;YAED,IAAM,cAAc,GAAG,MAAA,KAAK,CAAC,GAAG,0CAAG,IAAI,CAAC,CAAA;YAExC,IAAI,WAAW,CAAC,cAAc,CAAC,IAAI,OAAO,CAAC,cAAc,CAAC,EAAE;gBAC1D,OAAO,MAAM,CAAA;aACd;YAED,IAAM,mBAAmB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAEtD,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;gBACrC,mBAAmB,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;YAC5F,CAAC,CAAC,CAAA;YAEF,OAAO,mBAAmB,CAAA;QAC5B,CAAC;QACD,OAAO,EAAE,EAAE;KACZ,CAAA;AACH,CAAC","sourcesContent":["import { isEmpty, isFunction, isObject, isUndefined } from \"../../utils/helper\";\nimport deepmerge from \"../../utils/styled/deepmerge\";\nimport emptyTheme from \"../../constants/emptyTheme\";\nimport type { StyleCreatorValue, StyleOrCreator } from \"../types/index.types\";\nimport type { Theme } from \"../../types/index.types\";\n\nexport default function getStylesCreator(stylesOrCreator: StyleOrCreator): StyleCreatorValue {\n  const themingEnabled = isFunction(stylesOrCreator)\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!isObject(stylesOrCreator) && !themingEnabled) {\n      console.error(\n        [\n          'MAKE_STYLES: The `styles` argument provided is invalid.',\n          'You need to provide a function generating the styles or a styles object.',\n        ].join('\\n'),\n      );\n    }\n  }\n\n  return {\n    create: (theme: Theme, props: object, name: string) => {\n      let styles;\n      try {\n        styles = themingEnabled ? stylesOrCreator(theme, props) : stylesOrCreator;\n      } catch (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (themingEnabled && theme === emptyTheme) {\n            console.error(\n              [\n                'MAKE_STYLES: The supplied `theme` argument is invalid. ',\n                'The function you provided has no subject in context. ',\n                'One of the parent elements needs to use ThemeProvider and provide related theme configuration',\n              ].join('\\n'),\n            );\n          }\n        }\n        throw err;\n      }\n\n      if (!name) {\n        return styles\n      }\n\n      const themeOverrides = theme.css?.[name]\n\n      if (isUndefined(themeOverrides) || isEmpty(themeOverrides)) {\n        return styles\n      }\n\n      const stylesWithOverrides = Object.assign({}, styles);\n\n      Object.keys(themeOverrides).forEach(key => {\n        stylesWithOverrides[key] = deepmerge(stylesWithOverrides[key] || {}, themeOverrides[key]);\n      })\n\n      return stylesWithOverrides\n    },\n    options: {}\n  }\n}\n"]}
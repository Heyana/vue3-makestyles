{"version":3,"file":"combineCSSAndCreateStyleElement.js","sourceRoot":"","sources":["../../../src/utils/styled/combineCSSAndCreateStyleElement.ts"],"names":[],"mappings":"AAAA,OAAO,WAAW,MAAM,eAAe,CAAC;AACxC,OAAO,oBAAoB,MAAM,wBAAwB,CAAC;AAC1D,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAQpC,SAAS,+BAA+B,CAAC,MAAkB;IAEzD,OAAO;QACL,MAAM,EAAE,UAAC,oBAAgC;;YACvC,IAAM,OAAO,GAAuB,EAAE,CAAC;YACvC,IAAI,YAAY,GAAG,EAAE,CAAC;YAEtB,KAAK,IAAM,GAAG,IAAI,MAAM,EAAE;gBACxB,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;oBACxB,SAAS;iBACV;gBAEK,IAAA,KAAoB,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,oBAAoB,EAAE,GAAG,CAAC,EAArE,QAAQ,cAAA,EAAE,GAAG,SAAwD,CAAC;gBAE9E,OAAO,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;gBACxB,YAAY,IAAI,GAAG,CAAC;aACrB;YAED,IAAM,kBAAkB,GAAG,iBAAiB,CAAC,YAAY,CAAC,CAAC;YAC3D,IAAM,WAAW,GAAG,UAAG,MAAA,oBAAoB,CAAC,IAAI,mCAAI,kBAAkB,eAAK,kBAAkB,CAAE,CAAC;YAChG,IAAM,YAAY,GAAG,oBAAoB,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;YAErE,OAAO;gBACL,OAAO,SAAA;gBACP,YAAY,cAAA;aACb,CAAC;QACJ,CAAC;KACF,CAAA;AACH,CAAC;AAED,eAAe,+BAA+B,CAAC","sourcesContent":["import generateCSS from \"./generateCSS\";\nimport generateStyleElement from \"./generateStyleElement\";\nimport generateClassName from \"./generateClassName\";\nimport { isEmpty } from \"../helper\";\nimport type { ObjectType } from \"../../types/index.types\";\n\nexport interface CreateCSS {\n  classes: ObjectType<string>;\n  styleEleName: string | null;\n}\n\nfunction combineCSSAndCreateStyleElement(styles: ObjectType): { create: (stylesCreatorOptions: ObjectType) => CreateCSS }  {\n\n  return {\n    create: (stylesCreatorOptions: ObjectType) : CreateCSS => {\n      const classes: ObjectType<string> = {};\n      let stringifyCSS = \"\";\n\n      for (const key in styles) {\n        if (isEmpty(styles[key])) {\n          continue;\n        }\n\n        const { selector, css } = generateCSS(styles[key], stylesCreatorOptions, key);\n\n        classes[key] = selector;\n        stringifyCSS += css;\n      }\n\n      const styleElementIDName = generateClassName(stringifyCSS);\n      const eleDataMeta = `${stylesCreatorOptions.meta ?? 'makeStyleElement'}__${styleElementIDName}`;\n      const styleEleName = generateStyleElement(stringifyCSS, eleDataMeta);\n\n      return {\n        classes,\n        styleEleName,\n      };\n    }\n  }\n}\n\nexport default combineCSSAndCreateStyleElement;\n"]}
{"version":3,"file":"useMediaQuery.js","sourceRoot":"","sources":["../../src/hooks/useMediaQuery.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,GAAG,EAAE,WAAW,EAAgB,MAAM,KAAK,CAAC;AAC/D,OAAO,QAAQ,MAAM,YAAY,CAAC;AAClC,OAAO,EAAC,WAAW,EAAC,MAAM,iBAAiB,CAAC;AAC5C,OAAO,EAAC,UAAU,EAAC,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAC,QAAQ,EAAC,MAAM,iBAAiB,CAAC;AAGzC,IAAM,aAAa,GAAG,UAAC,UAAiC;IACtD,IAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACpE,IAAM,UAAU,GAAG,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;IAEhE,IAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;IAEzB,IAAM,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;IAC3E,IAAI,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC;IACjE,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;IAE1C,IAAM,KAAK,GAAG,GAAG,CAAU,KAAK,CAAC,CAAC;IAClC,IAAM,MAAM,GAAG,GAAG,CAAU,IAAI,CAAC,CAAC;IAElC,IAAI,CAAC,UAAU,EAAE;QACf,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;QACpB,OAAO,KAAK,CAAC;KACd;IAED,IAAM,SAAS,GAAG,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAG,KAAK,CAAC,CAAC;IAEtC,IAAM,WAAW,GAAG;QAClB,IAAI,CAAC,MAAM,CAAC,KAAK;YAAE,OAAO,KAAK,CAAC;QAEhC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC;IAClC,CAAC,CAAC;IAEF,SAAS,CAAC;QACR,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,iBAAiB;YAAE,OAAO;QAC/B,WAAW,EAAE,CAAC;QACd,SAAS,CAAC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,WAAW,CAAC;QACV,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,SAAS,CAAC,mBAAmB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,eAAe,aAAa,CAAC","sourcesContent":["import {onMounted, ref, onUnmounted, reactive, Ref} from \"vue\";\nimport useTheme from \"./useTheme\";\nimport {isUndefined} from \"../utils/helper\";\nimport {isFunction} from \"../utils/helper\";\nimport {isString} from \"../utils/helper\";\nimport type { Theme } from \"../types/index.types\";\n\nconst useMediaQuery = (queryInput: (theme: Theme) => any): Ref<boolean> => {\n  const supportMatchMedia = window && !isUndefined(window.matchMedia);\n  const matchMedia = supportMatchMedia ? window.matchMedia : null;\n\n  const theme = useTheme();\n\n  const mediaMatch = isFunction(queryInput) ? queryInput(theme) : queryInput;\n  let query = isString(mediaMatch) ? mediaMatch : mediaMatch.query;\n  query = query.replace(/^@media( ?)/m, \"\");\n\n  const match = ref<boolean>(false);\n  const active = ref<boolean>(true);\n\n  if (!matchMedia) {\n    match.value = false;\n    return match;\n  }\n\n  const queryList = matchMedia?.(query);\n\n  const updateMatch = () => {\n    if (!active.value) return false;\n\n    match.value = queryList.matches;\n  };\n\n  onMounted(() => {\n    active.value = true;\n\n    if (!supportMatchMedia) return;\n    updateMatch();\n    queryList.addEventListener(\"change\", updateMatch);\n  });\n\n  onUnmounted(() => {\n    active.value = false;\n    queryList.removeEventListener(\"change\", updateMatch);\n  });\n\n  return match;\n};\n\nexport default useMediaQuery;\n"]}
{"version":3,"file":"combinePropsClassNames.js","sourceRoot":"","sources":["../../../src/utils/styled/combinePropsClassNames.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,OAAO,EAAC,MAAM,WAAW,CAAC;AAGlC,SAAS,sBAAsB,CAC7B,cAAkC,EAClC,eAAwC;IAAxC,gCAAA,EAAA,oBAAwC;IAExC,IAAI,OAAO,CAAC,eAAe,CAAC,EAAE;QAC5B,OAAO,cAAc,CAAC;KACvB;IAED,IAAM,iBAAiB,GAAuB,MAAM,CAAC,MAAM,CACzD,EAAE,EACF,cAAc,CACf,CAAC;IAEF,KAAK,IAAM,GAAG,IAAI,eAAe,EAAE;QACjC,IAAI,iBAAiB,CAAC,GAAG,CAAC,EAAE;YAC1B,iBAAiB,CAAC,GAAG,CAAC,GAAG,iBAAiB,CACxC,GAAG,CACF,IAAI,WAAI,eAAe,CAAC,GAAG,CAAC,CAAE,CAAC;SACnC;KACF;IAED,OAAO,iBAAiB,CAAC;AAC3B,CAAC;AAED,eAAe,sBAAsB,CAAC","sourcesContent":["import {isEmpty} from \"../helper\";\nimport type { ObjectType } from \"../../types/index.types\";\n\nfunction combinePropsClassNames(\n  makeClassNames: ObjectType<string>,\n  propsClassNames: ObjectType<string> = {}\n): ObjectType<string> {\n  if (isEmpty(propsClassNames)) {\n    return makeClassNames;\n  }\n\n  const combineClassNames: ObjectType<string> = Object.assign(\n    {},\n    makeClassNames\n  );\n\n  for (const key in propsClassNames) {\n    if (combineClassNames[key]) {\n      combineClassNames[key] = combineClassNames[\n        key\n        ] += ` ${propsClassNames[key]}`;\n    }\n  }\n\n  return combineClassNames;\n}\n\nexport default combinePropsClassNames;\n"]}
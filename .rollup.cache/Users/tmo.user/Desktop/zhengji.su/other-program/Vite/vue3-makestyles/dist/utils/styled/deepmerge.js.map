{"version":3,"file":"deepmerge.js","sourceRoot":"","sources":["../../../src/utils/styled/deepmerge.ts"],"names":[],"mappings":";AAAA,MAAM,UAAU,aAAa,CAAC,IAAa;IACzC,OAAO,IAAI,KAAK,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,MAAM,CAAC;AAClF,CAAC;AAMD,MAAM,CAAC,OAAO,UAAU,SAAS,CAC/B,MAAS,EACT,MAAe,EACf,OAA2C;IAA3C,wBAAA,EAAA,YAA8B,KAAK,EAAE,IAAI,EAAE;IAE3C,IAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,cAAM,MAAM,EAAG,CAAC,CAAC,MAAM,CAAC;IAEtD,IAAI,aAAa,CAAC,MAAM,CAAC,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE;QAClD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,GAAG;YAC9B,IAAI,GAAG,KAAK,WAAW,EAAE;gBACvB,OAAO;aACR;YAED,IAAI,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC5E,MAAqC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;aAC5F;iBAAM;gBACJ,MAAqC,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;aAC3D;QACH,CAAC,CAAC,CAAC;KACJ;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["export function isPlainObject(item: unknown): item is Record<keyof any, unknown> {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\n\nexport interface DeepmergeOptions {\n  clone?: boolean;\n}\n\nexport default function deepmerge<T>(\n  target: T,\n  source: unknown,\n  options: DeepmergeOptions = { clone: true },\n): T {\n  const output = options.clone ? { ...target } : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach((key) => {\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        (output as Record<keyof any, unknown>)[key] = deepmerge(target[key], source[key], options);\n      } else {\n        (output as Record<keyof any, unknown>)[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}\n"]}